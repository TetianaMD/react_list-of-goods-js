{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPrepareGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,iBAClBC,EAAoB,SA0BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA3BR,SAAyBC,EAAzB,GACgC,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACPI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,SAKXT,GACFI,EAAcM,UAGTN,EAMcO,CAAgBlB,EACnC,CACEK,YACAE,iBAQJ,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,0BAA2BjB,IAAcJ,IAJ7C,iCAUA,wBACEmB,QAAS,kBAAMd,EAAaJ,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,6BAA8BjB,IAAcH,IAJhD,4BAUA,wBACEkB,QAAS,kBAAMZ,GAAiBD,IAChCc,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,8BAA+Bf,IAJnC,sBAUEF,GAAaE,IACb,wBACEa,QAxCM,WACdd,EAAa,IACbE,GAAgB,IAuCRa,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCtGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.efdb6d36.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPrepareGoods(goods,\n  { sortField, reverseField }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return null;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getPrepareGoods(goodsFromServer,\n    {\n      sortField,\n      reverseField,\n    });\n\n  const onReset = () => {\n    setSortField('');\n    setReverseField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'button is-info is-light': sortField !== SORT_FIELD_NAME,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'button is-success is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseField(!reverseField)}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'button is-warning is-light': !reverseField,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            onClick={onReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}